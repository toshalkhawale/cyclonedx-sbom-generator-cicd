version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - npm install -g @cyclonedx/cyclonedx-npm
      - curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
  build:
    commands:
      - echo "Generating SBOM..."
      - mkdir -p sbom-output
      - cyclonedx-npm --output-format json --output-file sbom-output/nodejs-sbom.json
      - echo "Uploading SBOM to S3..."
      - aws s3 cp sbom-output/nodejs-sbom.json s3://$S3_BUCKET/sboms/nodejs-sbom-$(date +%Y%m%d-%H%M%S).json
      - echo "Creating AWS Inspector SBOM scan..."
      - TIMESTAMP=$(date +%Y%m%d-%H%M%S)
      - SBOM_URL="s3://$S3_BUCKET/sboms/nodejs-sbom-$TIMESTAMP.json"
      - echo "{\"name\":\"sbom-scan-$TIMESTAMP\",\"sbomFormat\":\"CYCLONEDX_1_4\",\"sbomUrl\":\"$SBOM_URL\"}" > sbom-scan-request.json
      - SCAN_ID=$(aws inspector2 create-sbom-scan --cli-input-json file://sbom-scan-request.json --query 'sbomScanId' --output text)
      - echo "SBOM scan created with ID: $SCAN_ID"
      - echo "Waiting for scan to complete..."
      - STATUS="IN_PROGRESS"
      - MAX_ATTEMPTS=30
      - ATTEMPT=1
      - |
        while [ "$STATUS" = "IN_PROGRESS" ] && [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
          echo "Checking scan status (attempt $ATTEMPT/$MAX_ATTEMPTS)..."
          STATUS=$(aws inspector2 get-sbom-scan --sbom-scan-id "$SCAN_ID" --query 'status' --output text)
          if [ "$STATUS" = "IN_PROGRESS" ]; then
            echo "Scan still in progress. Waiting 10 seconds..."
            sleep 10
            ATTEMPT=$((ATTEMPT + 1))
          else
            echo "Scan completed with status: $STATUS"
          fi
        done
      - |
        if [ "$STATUS" = "SUCCEEDED" ]; then
          echo "Retrieving scan results..."
          aws inspector2 get-sbom-scan --sbom-scan-id "$SCAN_ID" > scan-results.json
          aws inspector2 list-findings --filter-criteria "{\"sbomScanArn\":{\"comparison\":\"EQUALS\",\"value\":\"$SCAN_ID\"}}" > findings.json
          aws s3 cp scan-results.json s3://$REPORTS_BUCKET/scan-results-$(date +%Y%m%d-%H%M%S).json
          aws s3 cp findings.json s3://$REPORTS_BUCKET/findings-$(date +%Y%m%d-%H%M%S).json
          
          # Generate summary
          CRITICAL_COUNT=$(grep -o '"CRITICAL"' findings.json | wc -l)
          HIGH_COUNT=$(grep -o '"HIGH"' findings.json | wc -l)
          MEDIUM_COUNT=$(grep -o '"MEDIUM"' findings.json | wc -l)
          LOW_COUNT=$(grep -o '"LOW"' findings.json | wc -l)
          
          echo "Vulnerability Summary:"
          echo "CRITICAL: $CRITICAL_COUNT"
          echo "HIGH: $HIGH_COUNT"
          echo "MEDIUM: $MEDIUM_COUNT"
          echo "LOW: $LOW_COUNT"
          echo "TOTAL: $(($CRITICAL_COUNT + $HIGH_COUNT + $MEDIUM_COUNT + $LOW_COUNT))"
          
          if [ $CRITICAL_COUNT -gt 0 ]; then
            echo "Critical vulnerabilities found! Please review the findings."
            exit 1
          fi
        else
          echo "Scan failed or timed out"
          exit 1
        fi
artifacts:
  files:
    - sbom-output/**/*
    - scan-results.json
    - findings.json
  discard-paths: no
